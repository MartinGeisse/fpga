`default_nettype none
`timescale 1ns / 1ps


module testbench();

    glbl gblbl();

    reg rawClk;
    initial begin
        rawClk <= 0;
        forever #10 rawClk = ~rawClk;
    end

    reg reset;
    initial begin
        reset <= 1;
        #100999
        reset <= 0;
    end

    wire hsync;
    wire vsync;
    wire r;
    wire g;
    wire b;

    wire sdram_ck_p;
    wire sdram_ck_n;
    wire sdram_cke;
    wire sdram_cs_n;
    wire sdram_ras_n;
    wire sdram_cas_n;
    wire sdram_we_n;
    wire[1:0] sdram_ba;
    wire[12:0] sdram_a;
    wire sdram_udm;
    wire sdram_ldm;
    wire sdram_udqs;
    wire sdram_ldqs;
    wire[15:0] sdram_dq;

    Gpu gpu1(
        .rawClk(rawClk),
        .reset(reset),
        .hsync(hsync),
        .vsync(vsync),
        .r(r),
        .g(g),
        .b(b),
        .sdram_ck_p(sdram_ck_p),
        .sdram_ck_n(sdram_ck_n),
        .sdram_cke(sdram_cke),
        .sdram_cs_n(sdram_cs_n),
        .sdram_ras_n(sdram_ras_n),
        .sdram_cas_n(sdram_cas_n),
        .sdram_we_n(sdram_we_n),
        .sdram_ba(sdram_ba),
        .sdram_a(sdram_a),
        .sdram_udm(sdram_udm),
        .sdram_ldm(sdram_ldm),
        .sdram_udqs(sdram_udqs),
        .sdram_ldqs(sdram_ldqs),
        .sdram_dq(sdram_dq)
    );

    initial begin
        #20000000 // eine 0 weniger sollte reichen
        $display("stb: %b, we: %b", gpu1.sdramInterfaceStb, gpu1.sdramInterfaceWe);
        $display("adr: %h", gpu1.sdramInterfaceAddressRegister);
        $display("wd: %h", gpu1.sdramInterfaceWriteDataRegister);
        $display("rd: %h", gpu1.sdramInterfaceReadDataRegister);
        $display("ready: %b", gpu1.sdramInterfaceReady);
        $display("ddrClkOk: %b", gpu1.ddrClkOk);
        $finish;
    end

endmodule
